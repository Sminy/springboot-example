1.使用gradle插件打docker镜像并发布到公司neus仓库：gradle jib -DsendCredentialsOverHttp=true
2.测试环境拉取镜像：docker pull nexus.xhd.cn:8082/marketing/marketing-server:latest

3.停止正在运行的同名容器: docker stop marketing-server

4.启动服务：sudo docker run -d -p 9921:9921 --name marketing-server --rm -e "JAVA_TOOL_OPTIONS=-Duser.timezone=Asia/Shanghai -Dspring.profiles.active=test" -e "MARKETING_MYSQL_URL=jdbc:mysql://172.17.0.1:3306/marketing?useUnicode=true&characterEncoding=utf8" -e "MARKETING_REDIS_HOST=172.17.0.1" nexus.xhd.cn:8082/marketing/marketing-server:latest

5.查看日志: sudo docker logs -ft marketing-server

查看本地镜像：sudo docker images
根据镜像创建并启动容器：sudo docker run <镜像名称>
启动停止容器：sudo docker start/stop <现有容器>
查看正在运行的容器：sudo docker ps
查看所有容器：sudo docker ps -a
删除镜像：sudo docker rmi <镜像>
删除容器：sudo docker rm <容器>
执行容器内部命令： sudo docker exec -it <容器> <命令>
查看容器日志：sudo docker logs <容器>

测试环境地址 http://testmini-marketing.xhd.cn/api


#################### 后台Docker部署########################
1. 拉取镜像
docker pull  nexus.xhd.cn:8082/contract/newchannel-contract:latest

2. 停止正在运行的镜像
docker stop newchannel-contract

3. 启动
docker run -d -p 9906:9906 --name newchannel-contract --rm  -v /opt/fonts:/app/fonts -e "JAVA_TOOL_OPTIONS=-Duser.timezone=Asia/Shanghai -Dspring.profiles.active=test" -e  "CONTRACT_MYSQL_URL=jdbc:mysql://192.168.10.160:3306/contract_test?useUnicode=true&characterEncoding=utf8" -e "CONTRACT_REDIS_HOST=192.168.10.160" -e "CONTRACT_REDIS_SELECT=4" -e "CONTRACT_FONT_PATH=/app/fonts" nexus.xhd.cn:8082/contract/newchannel-contract


#################### 前端Docker部署#########################
前端电子合同测试环境发布流程
1.合并开发代码到release/test分支（人工执行）
2.执行构建打包并推送容器镜像制品（CI自动执行）
3.ssh测试环境重新部署（人工执行）


执行部署命令
docker pull nexus.xhd.cn:8082/contract/contract-admin-web  // 拉取新镜像
docker stop contract-admin-web  // 停止当前服务
docker run -d -p 9104:80 --name contract-admin-web --rm nexus.xhd.cn:8082/contract/contract-admin-web  // 启动新容器

不走跳板机，内网直连测试服
ssh测试服务器账号
192.168.10.161
root / app@20210302



docker logs -f -t --since="2017-05-31" --tail=10 edu_web_1

 

--since : 此参数指定了输出日志开始日期，即只输出指定日期之后的日志。

-f : 查看实时日志

-t : 查看日志产生的日期

-tail=10 : 查看最后的10条日志。

edu_web_1 : 容器名称
